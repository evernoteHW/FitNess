//
//  UserInfoViewController.m
//  FitNess
//
//  Created by WeiHu on 14/10/25.
//  Copyright (c) 2014年 WeiHu. All rights reserved.
//

#import "UserInfoViewController.h"
#import "PMCalendar.h"

@interface UserInfoViewController ()<UITextFieldDelegate,PMCalendarControllerDelegate>
{
    UITapGestureRecognizer *singleTapGR;
    UIButton *calendarBgBtn;
}
@property (nonatomic, strong) PMCalendarController *pmCC;

@property (nonatomic, strong) UIScrollView *userInfoScrollView;
@property (nonatomic, strong) UIImageView *headIconImageView;
@property (nonatomic, strong) UITextField *nameTextField;           //名字
@property (nonatomic, strong) UITextField *phoneNumTextField;       //电话号码
//@property (nonatomic, strong) UILabel *sexLabel;                    //性别
@property (nonatomic, strong) UIButton *menBtn;            //保存资料
@property (nonatomic, strong) UIButton *womenBtn;            //保存资料
@property (nonatomic, strong) UILabel *birthdayLabel;                //生日
@property (nonatomic, strong) UITextField *heightTextField;         //身高
@property (nonatomic, strong) UITextField *weightTextField;         //体重
@property (nonatomic, strong) UITextField *unsignTextField;         //未知
@property (nonatomic, strong) UIButton *saveUserInfoBtn;            //保存资料

@end

@implementation UserInfoViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        //增加监听，当键盘出现或改变时收出消息
        [[NSNotificationCenter defaultCenter] addObserver:self
                                                 selector:@selector(keyboardWillShow:)
                                                     name:UIKeyboardWillShowNotification
                                                   object:nil];
        
        //增加监听，当键退出时收出消息
        [[NSNotificationCenter defaultCenter] addObserver:self
                                                 selector:@selector(keyboardWillHide:)
                                                     name:UIKeyboardWillHideNotification
                                                   object:nil];
   
    }
    return self;
}

- (void)dealloc
{
    NSLog(@"%s",__FUNCTION__);
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillShowNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillHideNotification object:nil];
}

#pragma mark
#pragma mark keyboardWillShow 和 keyboardWillHide 监听键盘和键盘一起出动

//Code from Brett Schumann
-(void) keyboardWillShow:(NSNotification *)note{
    // get keyboard size and loctaion
    if (singleTapGR == nil) {
        singleTapGR  =  [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapAnywhereToDismissKeyboard:)];
    }
    [self.view addGestureRecognizer:singleTapGR];
    
}
-(void) keyboardWillHide:(NSNotification *)note{
    [self.view removeGestureRecognizer:singleTapGR];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    [self.navigationItem setTitle:@"我的账号"];
    [self.view setBackgroundColor:[UIColor colorWithPatternImage:[UIImage imageNamed:@"quan_bg"]]];
    // Do any additional setup after loading the view.
    [self.view addSubview:self.userInfoScrollView];
    
}
- (UIScrollView *)userInfoScrollView
{
    if (_userInfoScrollView == nil) {
        _userInfoScrollView = [[UIScrollView alloc] initWithFrame:self.view.bounds];
        
        if (DIME_SCREEN_H > 500) {
            _userInfoScrollView.contentSize = CGSizeMake(_userInfoScrollView.width, _userInfoScrollView.height + 216);
        }else{
            _userInfoScrollView.contentSize = CGSizeMake(_userInfoScrollView.width, _userInfoScrollView.height + 216 + 40);
        }
        UserModel *userInfoModel = [[FNDataKeeper sharedInstance] getUser];
        
        self.headIconImageView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"bac_long_btn"]];
        [self.headIconImageView sd_setImageWithURL:[NSURL URLWithString:userInfoModel.userImgPath] placeholderImage:[UIImage imageNamed:@"bac_long_btn"]];
        self.headIconImageView.frame = CGRectMake((DIME_SCREEN_W - 70) /2.0, 10, 70, 70);
        self.headIconImageView.backgroundColor = [UIColor clearColor];
        [_userInfoScrollView addSubview:self.headIconImageView];
        
        self.nameTextField  = [[UITextField alloc] initWithFrame:CGRectMake(20, self.headIconImageView.bottom + 10, 280, 40)];
        self.nameTextField .delegate = self;
        self.nameTextField .returnKeyType = UIReturnKeySearch;
        self.nameTextField .text = userInfoModel.userName;
        self.nameTextField.enabled = NO;
        self.nameTextField.leftView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 40, 0)];
        self.nameTextField.leftViewMode = UITextFieldViewModeAlways;
        self.nameTextField .backgroundColor=[UIColor whiteColor];
        self.nameTextField .font = [UIFont systemFontOfSize:15.0f];
        self.nameTextField .textColor = [UIColor lightGrayColor];
        [_userInfoScrollView addSubview:self.nameTextField];
        
        self.phoneNumTextField  = [[UITextField alloc] initWithFrame:CGRectMake(self.nameTextField.left, self.nameTextField.bottom + 10,self.nameTextField.width, 40)];
        self.phoneNumTextField .delegate = self;
        self.phoneNumTextField .returnKeyType = UIReturnKeySearch;
        self.phoneNumTextField .text = userInfoModel.telNbr;
        self.phoneNumTextField .backgroundColor= [UIColor whiteColor];
        self.phoneNumTextField .font = [UIFont systemFontOfSize:15.0f];
        self.phoneNumTextField.leftView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 40, 0)];
        self.phoneNumTextField.leftViewMode = UITextFieldViewModeAlways;
        self.phoneNumTextField .textColor = [UIColor lightGrayColor];
        [_userInfoScrollView addSubview:self.phoneNumTextField];
        
        
        self.menBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        self.menBtn.frame = CGRectMake(self.nameTextField.left, self.phoneNumTextField.bottom + 10, self.nameTextField.width /2.0, 40);
        [self.menBtn setTitle:@"男" forState:UIControlStateNormal];
        self.menBtn.titleLabel.font = [UIFont boldSystemFontOfSize:16.0f];
        [self.menBtn addTarget:self action:@selector(sexBtnAction:) forControlEvents:UIControlEventTouchUpInside];
        self.menBtn.titleLabel.textAlignment = NSTextAlignmentCenter;
        [self.menBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        [self.menBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
       
        [_userInfoScrollView addSubview:self.menBtn];

        
        self.womenBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        self.womenBtn.frame = CGRectMake(self.menBtn.right, self.menBtn.top, self.nameTextField.width /2.0, 40);
        [self.womenBtn setTitle:@"女" forState:UIControlStateNormal];
        self.womenBtn.titleLabel.font = [UIFont boldSystemFontOfSize:16.0f];
        self.womenBtn.titleLabel.textAlignment = NSTextAlignmentCenter;
        [self.womenBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        [self.womenBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
        self.womenBtn.backgroundColor = [UIColor clearColor];
        [self.menBtn addTarget:self action:@selector(sexBtnAction:) forControlEvents:UIControlEventTouchUpInside];
        [_userInfoScrollView addSubview:self.womenBtn];
        
        if ([userInfoModel.sex integerValue] == 1) {
             self.menBtn.backgroundColor = [UIColor redColor];
             self.womenBtn.backgroundColor = [UIColor orangeColor];
        }else{
            self.menBtn.backgroundColor = [UIColor orangeColor];
            self.womenBtn.backgroundColor = [UIColor redColor];
        }
        
        self.birthdayLabel =[[UILabel alloc]initWithFrame:CGRectMake(self.nameTextField.left, self.menBtn.bottom + 10,self.nameTextField.width, 36)];
        [self.birthdayLabel setFont:[UIFont systemFontOfSize:15.0f]];
        self.birthdayLabel.textColor = [UIColor brownColor];
        self.birthdayLabel.userInteractionEnabled = YES;
        self.birthdayLabel.backgroundColor = [UIColor clearColor];
        self.birthdayLabel.text = userInfoModel.birthday;
        [_userInfoScrollView  addSubview:self.birthdayLabel];
        
        UITapGestureRecognizer *tap  =  [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(selectedCalendar:)];
        [self.birthdayLabel addGestureRecognizer:tap];
     
        
        self.heightTextField  = [[UITextField alloc] initWithFrame:CGRectMake(self.nameTextField.left, self.birthdayLabel.bottom + 10, self.nameTextField.width, 40)];
        self.heightTextField .delegate = self;
        self.heightTextField .returnKeyType = UIReturnKeySearch;
        self.heightTextField .text = userInfoModel.high;
        self.heightTextField .backgroundColor= [UIColor whiteColor];
        self.heightTextField .font = [UIFont systemFontOfSize:15.0f];
        self.heightTextField .textColor = [UIColor lightGrayColor];
        self.heightTextField.leftView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 40, 0)];
        self.heightTextField.leftViewMode = UITextFieldViewModeAlways;
        [_userInfoScrollView addSubview:self.heightTextField];
        
        self.weightTextField  = [[UITextField alloc] initWithFrame:CGRectMake(self.nameTextField.left, self.heightTextField.bottom + 10, self.nameTextField.width, 40)];
        self.weightTextField .delegate = self;
        self.weightTextField .returnKeyType = UIReturnKeySearch;
        self.weightTextField .text = userInfoModel.registyWeight;
        self.weightTextField .backgroundColor= [UIColor whiteColor];
        self.weightTextField .font = [UIFont systemFontOfSize:15.0f];
        self.weightTextField.leftView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 40, 0)];
        self.weightTextField.leftViewMode = UITextFieldViewModeAlways;
        self.weightTextField .textColor = [UIColor lightGrayColor];
        [_userInfoScrollView addSubview:self.weightTextField];
        
        self.unsignTextField  = [[UITextField alloc] initWithFrame:CGRectMake(self.nameTextField.left, self.weightTextField.bottom + 10, self.nameTextField.width, 40)];
        self.unsignTextField .delegate = self;
        self.unsignTextField .returnKeyType = UIReturnKeySearch;
        self.unsignTextField .text = userInfoModel.permitWeight;
        self.unsignTextField .backgroundColor= [UIColor whiteColor];
        self.unsignTextField .font = [UIFont systemFontOfSize:15.0f];
        self.unsignTextField .textColor = [UIColor lightGrayColor];
        self.unsignTextField.leftView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 40, 0)];
        self.unsignTextField.leftViewMode = UITextFieldViewModeAlways;
        [_userInfoScrollView addSubview:self.unsignTextField];
        
        self.saveUserInfoBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        self.saveUserInfoBtn.frame = CGRectMake(self.nameTextField.left, self.unsignTextField.bottom + 10, self.nameTextField.width, 40);
        [self.saveUserInfoBtn setTitle:@"保存资料" forState:UIControlStateNormal];
        self.saveUserInfoBtn.titleLabel.font = [UIFont boldSystemFontOfSize:16.0f];
        self.saveUserInfoBtn.titleLabel.textAlignment = NSTextAlignmentCenter;
        [self.saveUserInfoBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        [self.saveUserInfoBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
        [self.saveUserInfoBtn addTarget:self action:@selector(changeUserInfo) forControlEvents:UIControlEventTouchUpInside];
        self.saveUserInfoBtn.backgroundColor = [UIColor redColor];
        [_userInfoScrollView addSubview:self.saveUserInfoBtn];
    }
    return _userInfoScrollView;
}

- (void)sexBtnAction:(UIButton *)btn
{
    
}
- (void)selectedCalendar:(UITapGestureRecognizer *)tap
{
    self.pmCC = [[PMCalendarController alloc] init];
    self.pmCC.delegate = self;
    self.pmCC.mondayFirstDayOfWeek = YES;
    
    [self.pmCC presentCalendarFromView:tap.view
         permittedArrowDirections:PMCalendarArrowDirectionDown
                         animated:YES];

}
#pragma mark PMCalendarControllerDelegate methods

- (void)calendarController:(PMCalendarController *)calendarController didChangePeriod:(PMPeriod *)newPeriod
{
    self.birthdayLabel.text = [newPeriod.startDate dateStringWithFormat:@"yyyy-MM-dd"];
    [calendarController dismissCalendarAnimated:YES];
}

-(void)tappedOnDate:(NSDate *)selectedDate
{
    NSLog(@"%@",selectedDate);
}
-(void)onToadyTapped:(NSDate *)today
{
    NSLog(@"today>>>>>>%@",today);
}
- (void)removeFromSuperviewAction
{
    [calendarBgBtn removeFromSuperview];
}
-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
}

-(void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    
}

#pragma mark  修改用户资料

//运动分类
////
- (void)changeUserInfo
{
    [self showHud];
    NSMutableDictionary *parametersDic = [NSMutableDictionary dictionary];
    [parametersDic setObject:[[FNDataKeeper sharedInstance] getUserId] forKey:URL_DATA_K_USER_ID];
    UserModel *userInfoModel = [[FNDataKeeper sharedInstance] getUser];
    [parametersDic setObject:userInfoModel.password forKey:URL_DATA_K_PASSWORD];
    [parametersDic setObject:self.nameTextField.text forKey:URL_DATA_K_USER_NICKNAME];
    [parametersDic setObject:self.phoneNumTextField.text forKey:URL_DATA_K_TEL_NBR];
    [parametersDic setObject:userInfoModel.password forKey:URL_DATA_K_PASSWORD];
    [parametersDic setObject:@"1" forKey:URL_DATA_K_SEX];
    [parametersDic setObject:self.birthdayLabel.text forKey:URL_DATA_K_BIRTHDAY];
    [parametersDic setObject:self.heightTextField.text forKey:URL_DATA_K_HIGH];
    [parametersDic setObject:self.weightTextField.text forKey:URL_DATA_K_REGISTYWEIGHT];
    [parametersDic setObject:self.unsignTextField.text forKey:URL_DATA_K_PERMITWEIGHT];
    [parametersDic setObject:userInfoModel.workType forKey:URL_DATA_K_WORKTYPE];
    [parametersDic setObject:@"0" forKey:URL_DATA_K_IS_HAVE_FILE];
    [parametersDic setObject:@"0" forKey:URL_DATA_K_IMG_FILE];
    
    __unsafe_unretained UserInfoViewController *weakSelf  = self;
    [[NetworkManager shareManager] requestParams:parametersDic withModule:MODELS_MODEL_USERREGISTRY method:MODELS_METHOD_UPDATEUSERMESSAGE finishBlock:^(DataServies *request, id result) {
        
        NSString *msg = [result objectForKey:@"msg"];
        NSLog(@"%@",result);
        if ([[result objectForKey:@"flag"] integerValue] == 1) {
            NSArray *retDataArray = result[@"retDataArray"];
            NSDictionary *user = retDataArray[0];
            [[NSUserDefaults standardUserDefaults] setObject:user forKey:@"user"];
            [[NSUserDefaults standardUserDefaults] synchronize];
            [[TKAlertCenter defaultCenter] postAlertWithMessage:@"修改成功"];
            [[FNDataKeeper sharedInstance] updateUser:[UserModel modelWithDictionary:user]];
            [weakSelf.navigationController popViewControllerAnimated:YES];
        }else{
            NSLog(@"%@",msg);
        }
        [self hideHud];
        
    } failBlock:^(DataServies *request, NSError *error) {
        
        [self hideHud];
    }];
    
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
